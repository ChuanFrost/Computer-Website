function isEditFalse(){accountDetail.isEdit=!1}var deleteIcon=function(e,t,a){return'<i class="fas fa-times"></i>'},editIcon=function(e,t,a){return'<i class="far fa-edit"></i>'},passwordIcon=function(e,t,a){return'<i class="fas fa-user-lock"></i>'},table=new Tabulator("#account-table",{layout:"fitDataFill",data:data,headerFilterPlaceholder:"Search",responsiveLayout:"collapse",responsiveLayoutCollapseStartOpen:!1,columns:[{formatter:"responsiveCollapse",width:50,minWidth:30,align:"center",headerSort:!1,resizable:!1,responsive:0},{title:"ID",field:"id",responsive:0},{title:"Username",field:"username",headerFilter:!0,responsive:0},{title:"Full Name",field:"full_name",headerFilter:!0,responsive:1},{title:"Role",field:"role",headerFilter:!0,responsive:1},{title:"Gender",field:"gender",headerFilter:!0,responsive:1},{title:"Contact No",field:"contact",headerFilter:!0,responsive:1},{title:"Email",field:"email",headerFilter:!0,responsive:1},{title:"Edit",formatter:editIcon,align:"center",tooltip:"Edit",responsive:0,cellClick(e,t){var a={};Object.assign(a,t.getData()),accountDetail.accountDetail=a,accountDetail.isEdit=!0,toggleOverlay("#account-detail-overlay")}},{title:"Remove",formatter:deleteIcon,align:"center",tooltip:"Remove",responsive:0,cellClick(e,t){Swal.fire({type:"warning",title:"Are you sure on removing this account?",showCancelButton:!0,cancelButtonColor:"#d9534f",cancelButtonText:"No",confirmButtonColor:"#5cb85c",confirmButtonText:"Yes"}).then(e=>{e.value&&jsonAjax("/Account/RemoveAccount","POST",JSON.stringify({id:t.getData().id}),function(e){if("Success"==e.Status)return SwalSuccess("Account is succesfully removed.",""),table.setData(e.Data),0;"Database Error"==e.Status&&SwalError("Database Error. Please contact administrator.","")},alertError)})}}]}),accountDetail=new Vue({el:"#account-detail",data:{accountDetail:{id:"",username:"",password:"",confirmPassword:"",full_name:"",gender:"",contact:"",email:"",role:""},error:{},isEdit:!1},methods:{handleSubmit(e){var t=new FormData(e.target);this.isEdit?formAjax("/Account/EditAccount","POST",t,this.editAccount,alertError):this.checkPassword()?formAjax("/Account/AddAccount","POST",t,this.addAccount,alertError):(SwalError("Invalid detail. Please check error messages.",""),this.error={password:["Password does not match."]})},hide(){this.accountDetail={id:"",username:"",password:"",confirmPassword:"",full_name:"",gender:"",contact:"",email:"",role:""},this.error={},toggleOverlay("#account-detail-overlay")},addAccount(e){return"Success"==e.Status?(SwalSuccess("New account is successfully added.",""),table.setData(e.Data),this.hide(),0):"Validation Error"==e.Status?(SwalError("Invalid detail. Please check error messages.",""),this.error=e.Message,0):void("Database Error"==e.Status&&SwalError("Database Error. Please contact administrator.",""))},editAccount(e){return"Success"==e.Status?(SwalSuccess("Account is successfully edited.",""),table.setData(e.Data),this.hide(),0):"Validation Error"==e.Status?(SwalError("Invalid detail. Please check error messages.",""),this.error=e.Message,0):void("Database Error"==e.Status&&SwalError("Database Error. Please contact administrator.",""))},checkPassword(){return this.accountDetail.password==this.accountDetail.confirmPassword}}});
